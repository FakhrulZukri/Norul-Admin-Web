/*! ng-store 2014-09-06 */
"use strict";

!function($) {
    var adminPanel = $("#admin");
    $("#menu-toggle").on("click", function(e) {
        e.preventDefault(), adminPanel.toggleClass("toggled");
    });
}(window.jQuery, window, window.document);

var AngularFireCartAdmin = angular.module("AngularFireCartAdmin", [ "ngRoute", "firebase" ]).value("fbURL", "https://shopkart-cb49e.firebaseio.com/");

AngularFireCartAdmin.config(function($routeProvider) {
    $routeProvider.when("/", {
        templateUrl: "app-admin/views/index.html",
        controller: "DashboardCtrl"
    }).when("/products", {
        templateUrl: "app-admin/views/products.html",
        controller: "ProductsCtrl"
    }).when("/categories", {
        templateUrl: "app-admin/views/categories.html",
        controller: "CategoriesCtrl"
    }).when("/orders", {
        templateUrl: "app-admin/views/orders.html",
        controller: "OrdersCtrl"
    }).when("/orders/:id", {
        templateUrl: "app-admin/views/order.html",
        controller: "OrderCtrl"
    }).when("/customers", {
        templateUrl: "app-admin/views/customers.html",
        controller: "CustomersCtrl"
    }).when("/customers/:id", {
        templateUrl: "app-admin/views/customer.html",
        controller: "CustomerCtrl"
    }).when("/settings", {
        templateUrl: "app-admin/views/settings.html",
        controller: "SettingsCtrl"
    }).otherwise({
        template: "404 : OOPS!"
    });
}),
 AngularFireCartAdmin.controller("CategoriesCtrl", [ "$scope", "categories", function($scope, categories) {
    $scope.categories = categories.$asArray(), $scope.$watch("title", function() {
        var slugify = function(title) {
            return title = title || "", title.toString().toLowerCase().replace(/\s+/g, "-").replace(/[^\w\-]+/g, "").replace(/\-\-+/g, "-").replace(/^-+/, "").replace(/-+$/, "");
        };
        $scope.slug = slugify($scope.title);
    }), $scope.addCategory = function() {
        $scope.title && (categories.$update($scope.slug, {
            title: $scope.title,
            slug: $scope.slug
        }).then(function() {}), $scope.title = "", $scope.slug = "");
    }, $scope.save = function(category) {
        $scope.categories.$save(category);
    }, $scope.remove = function(category) {
        $scope.categories.$remove(category);
    };
} ]), AngularFireCartAdmin.controller("CustomerCtrl", [ "$scope", "$firebase", "$location", "$routeParams", "customerPath", "checkout", function($scope, $firebase, $location, $routeParams, customerPath, checkout) {
    var customerURL = new Firebase(customerPath + $routeParams.id), customer = $firebase(customerURL);
    $scope.customer = customer.$asObject(), $scope.orders = checkout.orders.$asArray(), 
    $scope.save = function(customer) {
        $scope.customer.$save(customer);
    }, $scope.destroy = function() {
        customerURL.destroy().then(function() {
            $location.path("/customers");
        });
    };
} ]), AngularFireCartAdmin.controller("CustomerCtrl", [ "$scope", "$firebase", "$location", "$routeParams", "customerPath", "checkout", function($scope, $firebase, $location, $routeParams, customerPath, checkout) {
    var customerURL = new Firebase(customerPath + $routeParams.id), customer = $firebase(customerURL);
    $scope.customer = customer.$asObject(), $scope.orders = checkout.orders.$asArray(), 
    $scope.save = function(customer) {
        $scope.customer.$save(customer);
    };
} ]), AngularFireCartAdmin.controller("DashboardCtrl", [ "$scope", "products", function($scope, products) {
    $scope.products = products.$asArray(), $scope.predicate = "-sku", $scope.categories = [ {
        name: "Berries"
    }, {
        name: "Cake Pops"
    } ], $scope.sale = [ {
        option: "Yes"
    }, {
        option: "No"
    } ], $scope.isOnSale = $scope.sale[1], $scope.addProduct = function() {
        $scope.name && (products.$set($scope.sku.toString(), {
            sku: $scope.sku,
            name: $scope.name,
            price: $scope.price,
            image: $scope.image,
            description: $scope.description,
            category: $scope.category.name,
            isOnSale: $scope.isOnSale.option
        }), $scope.sku = $scope.sku + 1, $scope.name = "", $scope.price = "", $scope.image = "", 
        $scope.description = "", $scope.category = "", $scope.isOnSale = $scope.sale[1]);
    }, $scope.save = function(product) {
        $scope.products.$save(product);
    }, $scope.remove = function(product) {
        $scope.products.$remove(product);
    };
} ]), AngularFireCartAdmin.controller("OrderCtrl", [ "$scope", "checkout", function($scope, checkout) {
    $scope.orders = checkout.orders.$asArray(), $scope.user_id = checkout.user_id.$asArray(), 
    $scope.predicate = "-orderDate";
} ]), AngularFireCartAdmin.controller("OrdersCtrl", [ "$scope", "checkout", function($scope, checkout) {
    $scope.orders = checkout.orders.$asArray(), $scope.user_id = checkout.user_id.$asArray(), 
    $scope.predicate = "-orderDate", $scope.statuses = [ {
        option: "New"
    }, {
        option: "Shipped"
    }, {
        option: "Delivered"
    }, {
        option: "Retunred"
    }, {
        option: "Cencelled"
    } ], $scope.status = $scope.statuses[1], $scope.save = function(order) {
        $scope.orders.$save(order);
    }, $scope.remove = function(order) {
        $scope.orders.$remove(order);
    };
} ]), AngularFireCartAdmin.controller("ProductsCtrl", [ "$scope", "products", "categories", function($scope, products, categories) {
    $scope.products = products.$asArray(), $scope.predicate = "-price", $scope.categories = categories.$asArray(), 
    $scope.sale = [ {
        option: "Yes"
    }, {
        option: "No"
    } ], $scope.isOnSale = $scope.sale[1], $scope.addProduct = function() {
        $scope.name && (products.$push($scope.price.toString(), {
            sku: $scope.sku,
            name: $scope.name,
            price: $scope.price,
            image: $scope.image,
            description: $scope.description,
            category: $scope.category.name,
            isOnSale: $scope.isOnSale.option
        }), $scope.sku = $scope.sku + 1, $scope.name = "", $scope.price = "", $scope.image = "", 
        $scope.description = "", $scope.category = "", $scope.isOnSale = $scope.sale[1]);
    }, $scope.save = function(product) {
        $scope.products.$save(product);
    }, $scope.remove = function(product) {
        $scope.products.$remove(product);
    };
} ]), AngularFireCartAdmin.controller("SettingsCtrl", [ "$scope", function() {} ]), 
AngularFireCartAdmin.directive("widget", function() {
    return {
        restrict: "E",
        transclude: !0,
        scope: {
            icon: "@",
            title: "@"
        },
        link: function(scope, element, attrs) {
            scope.value = attrs.value, scope.icon = attrs.icon;
        },
        templateUrl: "app-admin/views/widget.html"
    };
}), AngularFireCartAdmin.factory("categories", [ "$firebase", "fbURL", function($firebase, fbURL) {
    var firebaseURL = new Firebase(fbURL + "/category"), categories = $firebase(firebaseURL);
    return categories;
} ]), AngularFireCartAdmin.factory("checkout", [ "$firebase", "fbURL", function($firebase, fbURL) {
    var checkout = {}, firebaseOrdersURL = new Firebase(fbURL + "/orders"), firebaseCustomersURL = new Firebase(fbURL + "/users");
    return checkout.orders = $firebase(firebaseOrdersURL), checkout.user_id = $firebase(firebaseCustomersURL), 
    checkout;
} ]), AngularFireCartAdmin.factory("customerPath", [ "$firebase", "fbURL", function($firebase, fbURL) {
    var firebasePath = fbURL + "/users";
    return firebasePath;
} ]), AngularFireCartAdmin.factory("orderPath", [ "$firebase", "fbURL", function($firebase, fbURL) {
    var firebasePath = fbURL + "/orders";
    return firebasePath;
} ]), AngularFireCartAdmin.factory("products", [ "$firebase", "fbURL", function($firebase, fbURL) {
    var firebaseURL = new Firebase(fbURL + "/menu"), products = $firebase(firebaseURL);
    return products;
} ]);